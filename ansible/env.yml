---
- name: Prepare
  hosts: all
  tags: ["always"]
  tasks:
  - name: Set global variable
    ansible.builtin.set_fact:
      is_cent_os: "{{ ansible_distribution == 'CentOS' }}"
      is_ubuntu_os: "{{ ansible_distribution == 'Ubuntu' }}"
      os_version: "{{ ansible_distribution_version }}"
      is_pi4: "{{ inventory_hostname in groups['pi'] }}"
      is_centos7_pi: is_pi4 and os_version is regex('^7.')
      cluster_size: "{{ groups['k8s'] | length }}"
      enable_k8s_ha_mode: cluster_size > 3 and K8S_HA_VIP != ""
      k8s_user: "admin" # user for dashboard
      k8s_join_command_file: '/tmp/k8s_join_command'
      kube_folder: "~/.kube"
      smtp_host: "{{ lookup('env', 'SMTP_HOST') }}"
      smtp_user: "{{ lookup('env', 'SMTP_USER') }}"
      smtp_pass: "{{ lookup('env', 'SMTP_PASS') }}"
      smtp_from: "{{ lookup('env', 'SMTP_FROM') }}"

  - name: Set global variable part two
    ansible.builtin.set_fact:
      k8s_config_file: "{{ kube_folder + '/config' }}"
      k8s_api_endpoint: "{{ '' if not enable_k8s_ha_mode or K8S_API_DOMAIN != '' else K8S_API_DOMAIN + ':' + K8S_API_PORT }}"

  - name: Set global variable part three
    ansible.builtin.set_fact:
      extra_init_args: "{{ '--upload-certs --control-plane-endpoint=' + k8s_api_endpoint if k8s_api_endpoint != '' else '' }}"
