- name: Set fact
  ansible.builtin.set_fact:
    grant_users: ["root"]

- name: Set fact if os user is not root
  ansible.builtin.set_fact:
    grant_users: grant_users+[OS_USER]
  when: OS_USER != "root"

- name: Permitrootlogin & PubkeyAuthentication
  become: true
  ansible.builtin.lineinfile:
    path: "/etc/ssh/sshd_config"
    regex: "^(#)?{{item.key}}"
    line: "{{item.key}} {{item.value}}"
    insertafter: EOF
    state: present
  with_items:
  - { key: "PermitRootLogin", value: "yes" }
  - { key: "PubkeyAuthentication", value: "yes" }
  notify:
    restart sshd

- name: Config - create .ssh folder
  become_user: "{{ item }}"
  ansible.builtin.file:
    path: "~/.ssh"
    state: directory
  with_items: "{{ grant_users }}"

- name: Config - create .ssh/config
  become_user: "{{ item }}"
  ansible.builtin.file:
    path: "~/.ssh/config"
    state: touch
  with_items: "{{ grant_users }}"

- name: Disable ssh hostkey checking
  become_user: "{{ item }}"
  community.general.ssh_config:
    user: "{{ item }}"
    host: "{{ RESOURCE_PREFIX }}*"
    user_known_hosts_file: /dev/null
    strict_host_key_checking: "no"
  with_items: "{{ grant_users }}"
  ignore_errors: true
  when: not is_centos7_pi

- name: Disable ssh hostkey checking for centos7 pi
  ansible.builtin.blockinfile:
    insertafter: EOF
    dest: "~/.ssh/config"
    block: |
      Host {{ RESOURCE_PREFIX }}*
        User {{ item }}
        StrictHostKeyChecking no
        UserKnownHostsFile=/dev/null
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
    backup: true
  with_items: "{{ grant_users }}"

- name: Create ssh directory
  ansible.builtin.file:
    state: directory
    path: ~/.ssh

- name: Keygen
  tags: ['base', 'server-ssh']
  become_user: "{{ item }}"
  community.crypto.openssh_keypair:
    path: ~/.ssh/id_rsa
  with_items: "{{ grant_users }}"

- name: Fetch key file to another server
  tags: ['base', 'server-ssh']
  become_user: "{{ item }}"
  ansible.builtin.fetch:
    src: "~/.ssh/id_rsa.pub"
    dest: "~/.ssh/{{ inventory_hostname }}-{{ item }}-id_rsa.pub"
    flat: true
  with_items: "{{ grant_users }}"

- name: Copy key to authorized_keys
  tags: ['base', 'server-ssh']
  become_user: "{{ item[1] }}"
  vars:
    auth_file: "~/.ssh/{{ item[0] }}-{{ item[1] }}-id_rsa.pub"
  ansible.posix.authorized_key:
    user: "{{ item[1] }}"
    state: present
    key: "{{ lookup('file', auth_file) }}"
  with_nested:
    - "{{ groups['nodes'] }}"
    - "{{ grant_users }}"

- name: Remove please login as xxx...
  become: true
  become_user: root
  ansible.builtin.shell: sed -i -e 's/.*exit 142" \(.*$\)/\1/' ~/.ssh/authorized_keys
  register: result
  changed_when: result.rc != 0
