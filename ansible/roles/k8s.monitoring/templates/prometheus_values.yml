#jinja2: trim_blocks: True, lstrip_blocks: True
#kubeControllerManager:
#  serviceMonitor:
#    enabled: true
#    https: true
#    insecureSkipVerify: true
#kubeScheduler:
#  serviceMonitor:
#    enabled: true
#    https: true
#    insecureSkipVerify: true
#kubeEtcd:
#  serviceMonitor:
#    enabled: true
#    https: true
#    insecureSkipVerify: true
defaultRules:
  rules:
     alertManager: true
alertmanager:
  enabled: true
  {% if CEPH_STORAGE_CLASS is defined %}
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ CEPH_STORAGE_CLASS }}
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
  {% endif %}
  config:
    {% if smtp_host is defined %}
    global:
      smtp_smarthost: '{{ smtp_host }}'
      smtp_from: '{{ smtp_from }}'
      smtp_auth_username: "{{ smtp_user }}"
      smtp_auth_password: "{{ smtp_pass }}"
      smtp_require_tls: true
    {% endif %}
  {% if alert_email_receiver is defined %}
    route:
      group_by: ['alertname', 'prometheus', 'namespace']
      receiver: 'null'
      routes:
      - receiver: 'null'
        match:
          alertname: Watchdog
      - receiver: 'email'
        match:
          severity: critical
    receivers:
      - name: 'null'
      - name: 'email'
        email_configs:
        - to: '{{ alert_email_receiver }}'
  {% endif %}
grafana:
  adminPassword: "{{ grafana_password }}"
  grafana.ini:
    smtp:
      enabled: true
      host: "{{ smtp_host }}"
      user: "{{ smtp_user }}"
      password: "{{ smtp_pass }}"
      from_address: "{{ smtp_from }}"
  smtp:
    existingSecret: ""
    userKey: "user"
    passwordKey: "password"
    
{% if CEPH_STORAGE_CLASS is defined %}
thanosRuler:
  thanosRulerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ CEPH_STORAGE_CLASS }}
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 8Gi
{% endif %}

prometheus:
  prometheusSpec:
    {% if CEPH_STORAGE_CLASS is defined %}
    storageSpec:
      volumeClaimTemplate:
        spec:
          storageClassName: {{ CEPH_STORAGE_CLASS }}
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 50Gi
    {% endif %}
    #additionalScrapeConfigs:
    #- job_name: 'http-request-total'
    #  scrape_interval: 5s
    #  scrape_timeout: 5s
    #  static_configs:
    #  - targets: ['http-request-total.default.svc.cluster.local:9121']
    #- job_name: 'uptime'
    #  metrics_path: /probe
    #  params:
    #    module: [http_2xx]
    #  static_configs:
    #    - targets:
    #      - 'https://nttrd2.nuclias.com/'
    #      - 'https://nttrd.nuclias.com/'
    #      - 'https://jprd.nuclias.com/'
    #      - 'https://mbsdedge-dev.decs.dlink.com/'
    #      - 'https://global-staging.decs.dlink.com/'
    #      - 'https://portal.decs.dlink.com/'
    #  relabel_configs:
    #    - source_labels: [__address__]
    #      target_label: __param_target
    #    - source_labels: [__param_target]
    #      target_label: instance
    #    - target_label: __address__
    #      replacement: blackbox-prometheus-blackbox-exporter.blackbox:9115