- name: Prometheus - Load Scrape Urls from additionalScrapeUrls.yml
  ansible.builtin.include_vars:
    dir: vars
    files_matching: additionalScrapeUrls.yml

- name: Prometheus - Add repo
  kubernetes.core.helm_repository:
    name: prometheus-community
    repo_url: "{{ chart_prometheus }}"

- name: Prometheus - Deploy
  kubernetes.core.helm:
    release_name: prometheus-stack
    release_namespace: "{{ prometheus_namespace }}"
    create_namespace: true
    chart_ref: prometheus-community/kube-prometheus-stack
    update_repo_cache: true
    release_values:
      defaultRules:
        rules:
          alertManager: true
      alertmanager:
        enabled: true
        config:
          global:
            smtp_smarthost: 'localhost:25'
            smtp_from: 'alertmanager@example.com'
            smtp_require_tls: false
          route:
            group_by: ['namespace', 'instance', 'severity']
            receiver: 'jason'
          receivers:
          - name: 'jason'
            email_configs:
            - to: '17hado.com@gmail.com'
      grafana:
        adminPassword: "{{ grafana_password }}"
      prometheus:
        prometheusSpec:
          additionalScrapeConfigs:
          - job_name: 'http-request-total'
            scrape_interval: 5s
            scrape_timeout: 5s
            static_configs:
            - targets: ['http-request-total.default.svc.cluster.local:9121']
          - job_name: 'uptime'
            metrics_path: /probe
            params:
              module: [http_2xx]
            static_configs:
            - targets: "{{ SCRAPE_URLS }}"
            relabel_configs:
            - source_labels: [__address__]
              target_label: __param_target
            - source_labels: [__param_target]
              target_label: instance
            - target_label: __address__
              replacement: blackbox-prometheus-blackbox-exporter.blackbox:9115
        additionalPrometheusRulesMap:
          uptime:
            rules:
            - alert: EndPointDown
              expr: probe_success == 0
              for: 30s
              lables:
                severity: "critical"
              annotations:
                summary: "Endpoint {{ '{{' }} $lables.instance {{ '}}' }} down"
        