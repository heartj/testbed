- name: collect service
  service_facts:
  register: services
  
- name: check if snapd exists
  set_fact: has_snapd="{{ 'snapd' in services }}"

- name: enable snapd
  ansible.builtin.systemd:
    name: snapd
    enabled: true
    state: started
  when: has_snapd

- name: create snapd symbolic link
  ansible.builtin.file:
    src: /var/lib/snapd/snap
    dest: /snap
    state: link
  when: has_snapd

- name: Create containerd config file
  ansible.builtin.file:
    path: "/etc/modules-load.d/containerd.conf"
    state: "touch"
  ignore_errors: true

- name: Add conf for containerd
  ansible.builtin.blockinfile:
    path: "/etc/modules-load.d/containerd.conf"
    block: |
      overlay
      br_netfilter
  
- name: Modprobe overlay
  ansible.builtin.command: modprobe overlay

- name: Modprobe br_netfilter
  ansible.builtin.command: modprobe br_netfilter

- name: Set system configurations for k8s
  ansible.builtin.file:
    path: "/etc/sysctl.d/99-kubernetes-cri.conf"
    state: "touch"

- name: Add conf for containerd
  ansible.builtin.blockinfile:
    path: "/etc/sysctl.d/99-kubernetes-cri.conf"
    block: |
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-ip6tables = 1

- name: Apply new settings
  ansible.builtin.command: sysctl --system

- name: Pi4 - enable and start docker
  ansible.builtin.systemd:
    name: docker
    enabled: true
    state: started
  when: is_cent_os and (is_pi4 or isis_centos9_pi)

- name: config containerd
  ansible.builtin.shell: |
    mkdir -p /etc/containerd
    containerd config default | sudo tee /etc/containerd/config.toml
    systemctl restart containerd
  ignore_errors: true

- name: Disable swap
  ansible.builtin.shell: |
    swapoff -a
    sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

- name: install and configure dependencies
  ansible.builtin.shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
  when: not is_cent_os

- name: RHEL import gpg key
  ansible.builtin.shell: |
    rpm --import https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
  when: is_cent_os

- name: Repo for apt
  ansible.builtin.set_fact: k8s_sourcelist="/etc/apt/sources.list.d/kubernetes.list"
  when: not is_cent_os

- name: Create k8s repo file
  ansible.builtin.file:
    path: "{{ k8s_sourcelist }}"
    state: "touch"
  when: not is_cent_os

- name: RHEL add k8s repo
  yum_repository:
    name: kubernetes
    gpgcheck: yes
    repo_gpgcheck: no
    description: for kubernetes
    enabled: yes
    file: k8s_repo
    baseurl: "https://packages.cloud.google.com/yum/repos/kubernetes-el7-{{ 'aarch64' if is_pi4 else 'x86_64' }}"
  when: is_cent_os

- name: Add k8s source
  ansible.builtin.blockinfile:
    path: "{{ k8s_sourcelist }}"
    block: |
      deb https://apt.kubernetes.io/ kubernetes-xenial main
  when: not is_cent_os

- name: apt update
  ansible.builtin.apt:
    update_cache: true
  when: is_ubuntu_os

- name: Remove CNI
  ansible.builtin.package:
    name: "kubernetes-cni.aarch64"
    state: absent

- name: Install k8s
  ansible.builtin.package:
    name: "{{ packages }}"
    state: present
    # state: latest
  vars:
    packages:
      - kubeadm=1.25.4-00
      - kubelet=1.25.4-00
      - kubectl=1.25.4-00
      # - kubelet-1.25.4-00.aarch64
      # - kubeadm-1.25.4-00.aarch64
      # - kubectl-1.25.4-00.aarch64
      # - kubernetes-cni-0.8.7-0.aarch64
      # - kubeadm
      # - kubelet
      # - kubectl

# - name: Reset kubeadm
#   ansible.builtin.command: kubeadm reset --force

- name: Enable kubelet service
  ansible.builtin.systemd:
    name: kubelet
    daemon_reload: true
    enabled: true
    state: started

- name: Install helm by snapd
  snap:
    name: helm
    classic: true
  when: has_snapd

- name: Install helm by using script
  ansible.builtin.shell: |
    curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  environment:
    VERIFY_CHECKSUM: "false"
  when: not has_snapd

- name: Hold package
  vars:
    hold: true
  ansible.builtin.include_role:
    name: k8s
    tasks_from: hold-pkg-version
