- name: Configure - Create NameNode Dir
  file: 
    state: directory
    path: "{{ DIR_NAME }}"
    recurse: true

- name: Configure - Create DataNode Dir
  file: 
    state: directory
    path: "{{ DIR_DATA }}"
    recurse: true

- name: Configure - hdfs-site.xml dfs.client.use.datanode.hostname
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/hdfs-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>dfs.client.use.datanode.hostname</name><value>true</value></property>"
    regexp: 'dfs.client.use.datanode.hostname'

- name: Configure - hdfs-site.xml dfs.datanode.use.datanode.hostname
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/hdfs-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>dfs.datanode.use.datanode.hostname</name><value>true</value></property>"
    regexp: 'dfs.datanode.use.datanode.hostname'

- name: Configure - hdfs-site.xml
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/hdfs-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>dfs.name.dir</name><value>{{ DIR_NAME }}</value></property>"
    regexp: 'dfs.name.dir'

- name: Configure - hdfs-site.yaml 2
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/hdfs-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>dfs.replication</name><value>{{ groups['datanode'] | length }}</value></property>"
    regexp: 'replication'

- name: Configure - hdfs-site.yaml 3
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/hdfs-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>dfs.permissions</name><value>false</value></property>"
    regexp: 'dfs.permissions'

# - name: Configure - hdfs-site.yaml 4 dfs.nameservices
#   lineinfile:
#     path: "{{ HADOOP_HOME }}/etc/hadoop/hdfs-site.xml"
#     insertafter: "<configuration>"
#     line: "  <property><name>dfs.nameservices</name><value>{{ groups['namenode'] | join(',') }}</value></property>"
#     regexp: 'dfs.nameservices'

# - name: Configure - hdfs-site.yaml 5 dfs.namenode.rpc-bind-host
#   lineinfile:
#     path: "{{ HADOOP_HOME }}/etc/hadoop/hdfs-site.xml"
#     insertafter: "<configuration>"
#     line: "  <property><name>dfs.namenode.rpc-bind-host</name><value>0.0.0.0</value></property>"
#     regexp: 'dfs.namenode.rpc-bind-host'

# - name: Configure - hdfs-site.yaml 5 dfs.namenode.servicerpc-bind-host
#   lineinfile:
#     path: "{{ HADOOP_HOME }}/etc/hadoop/hdfs-site.xml"
#     insertafter: "<configuration>"
#     line: "  <property><name>dfs.namenode.servicerpc-bind-host</name><value>0.0.0.0</value></property>"
#     regexp: 'dfs.namenode.servicerpc-bind-host'


- name: Configure - cors-site.xml fs.defaultFS
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/core-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>fs.defaultFS</name><value>hdfs://{{ inventory_hostname}}:9000</value></property>"
    regexp: 'fs.defaultFS'
  # when: inventory_hostname == groups['namenode'][0]

- name: Configure - cors-site.xml ipc.ping.interval
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/core-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>ipc.ping.interval</name><value>180000</value></property>"
    regexp: 'ipc.ping.interval'

- name: Configure - cors-site.xml ha.zookeeper.quorum
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/core-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>ha.zookeeper.quorum</name><value>{{ groups['zk'] | join(':2182,') }}:2181</value></property>"
    regexp: 'ha.zookeeper.quorum'
  when: groups['zk'] is defined and (groups['zk']|length > 0)

- name: Configure - hadoop-env.sh
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/hadoop-env.sh"
    line: "JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64"
    regexp: '^JAVA_HOME'

- name: Configure - yarn-site.xml
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/yarn-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>yarn.nodemanager.aux-services</name><value>mapreduce_shuffle</value></property>"
    regexp: 'aux-services'

- name: Configure - mapred-site.xml
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/mapred-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>mapreduce.framework.name</name><value>yarn</value></property>"
    regexp: 'mapreduce.framework.name'

- name: Configure - Create NameNode Dir
  lineinfile:
    path: "{{ HADOOP_HOME }}/etc/hadoop/hdfs-site.xml"
    insertafter: "<configuration>"
    line: "  <property><name>dfs.data.dir</name><value>{{ DIR_DATA }}</value></property>"
    regexp: 'dfs.data.dir'

- name: set permission
  file:
    path: "{{ HADOOP_HOME }}"
    recurse: yes
    state: directory
    owner: ubuntu
    group: root
    mode: "0775"